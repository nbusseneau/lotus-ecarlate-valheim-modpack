## Settings file was created by plugin Seasons v1.6.4
## Plugin GUID: shudnal.Seasons

[General]

## Nexus mod ID for updates
# Setting type: Int32
# Default value: 2654
NexusID = 2654

## Configuration is locked and can be changed by server admins only.
# Setting type: Boolean
# Default value: true
Lock Configuration = true

## Enable logging. [Not Synced with Server]
# Setting type: Boolean
# Default value: false
Logging enabled = true

## Day length in seconds. Vanilla - 1800 seconds. Set to 0 to disable.
# Setting type: Int64
# Default value: 1800
Day length in seconds = 1800

[Season]

## Force disables Bloom graphics setting while in Winter and restores it in other seasons (it will not change Graphics setting, only disables posteffect).
## Bloom in Winter is what makes you blind with that much of white. [Not Synced with Server]
# Setting type: Boolean
# Default value: true
Disable Bloom in Winter = true

## Reduce SnowStorm particles emission rate and maximum amount. Vanilla values is 500:2000
## First parameter is emission rate and second is max particles amount.
## Helps fps in Winter. Doesn't affect Mountains, Ashlands and DeepNorth.
## Set to 0:0 to return Vanilla behaviour. [Not Synced with Server]
# Setting type: Vector2
# Default value: {"x":250.0,"y":1000.0}
Reduce SnowStorm particles in Winter = {"x":250.0,"y":1000.0}

## Enables seasonal (Halloween, Midsummer, Yule) items in the corresponding season
# Setting type: Boolean
# Default value: true
Enable seasonal items = true

## Prevents death from freezing when not in mountains or deep north
# Setting type: Boolean
# Default value: true
Prevent death from freezing = true

## Make seasonal stats works only outdoors
# Setting type: Boolean
# Default value: true
Seasonal stats works only outdoors = true

## Swimming in cold water during winter will get you freezing debuff
# Setting type: Boolean
# Default value: true
Get freezing when swimming in cold water in winter = true

## Season can be changed regular way only after sleep
# Setting type: Boolean
# Default value: false
Change season only after sleep = false

## Crops and pickables will perish after set day in winter
# Setting type: Int32
# Default value: 3
Crops will die after set day in winter = 3

## Crops and pickables will not perish in winter if there are fire source nearby
# Setting type: Boolean
# Default value: true
Crops will survive if protected by fire = true

## Crops and pickables from the list will not perish after set day in winter
# Setting type: String
# Default value: Pickable_Carrot,Pickable_Barley,Pickable_Barley_Wild,Pickable_Flax,Pickable_Flax_Wild,Pickable_Thistle,Pickable_Mushroom_Magecap
Crops will survive in winter = Pickable_Carrot,Pickable_Barley,Pickable_Barley_Wild,Pickable_Flax,Pickable_Flax_Wild,Pickable_Thistle,Pickable_Mushroom_Magecap

## All consumable crops will be added automatically. Set only unconsumable crops here.Crops and pickables from the list will be controlled by growth multiplier in addition to consumable crops
# Setting type: String
# Default value: Pickable_Barley,Pickable_Barley_Wild,Pickable_Dandelion,Pickable_Flax,Pickable_Flax_Wild,Pickable_SeedCarrot,Pickable_SeedOnion,Pickable_SeedTurnip,Pickable_Thistle,Pickable_Turnip
Crops to control growth = Pickable_Barley,Pickable_Barley_Wild,Pickable_Dandelion,Pickable_Flax,Pickable_Flax_Wild,Pickable_SeedCarrot,Pickable_SeedOnion,Pickable_SeedTurnip,Pickable_Thistle,Pickable_Turnip

## Wood item names to control drop from trees
# Setting type: String
# Default value: Wood,FineWood,RoundLog,ElderBark,YggdrasilWood
Wood to control drop = Wood,FineWood,RoundLog,ElderBark,YggdrasilWood

## Meat item names to control drop from characters
# Setting type: String
# Default value: RawMeat,DeerMeat,NeckTail,WolfMeat,LoxMeat,ChickenMeat,HareMeat,SerpentMeat
Meat to control drop = RawMeat,DeerMeat,NeckTail,WolfMeat,LoxMeat,ChickenMeat,HareMeat,SerpentMeat

## If enabled - objects inside shield generator dome will be protected from seasonal effects both positive and negative.
# Setting type: Boolean
# Default value: true
Shield generator protects from weather = true

## If enabled - objects inside shield generator dome will be protected from Winter only. If disabled - protection will work through all seasons.
# Setting type: Boolean
# Default value: true
Shield generator protects from Winter only = true

## If you get Wet status during winter you will get Cold status,
## unless you have frost resistance mead or you are near a fire or in shelter
# Setting type: Boolean
# Default value: true
Getting Wet in winter causes Cold = true

[Season - Buff]

## Show current season buff.
# Setting type: Boolean
# Default value: true
Show current season buff = true

## What to show at season buff timer
# Setting type: TimerFormat
# Default value: CurrentDay
# Acceptable values: None, CurrentDay, TimeToEnd, CurrentDayAndTimeToEnd
Timer format = CurrentDay

## Hide seconds at season buff timer
# Setting type: Boolean
# Default value: true
Hide seconds = true

## Show current season tooltip in Raven menu
# Setting type: Boolean
# Default value: true
Raven menu Show current season = true

## What to show at season buff timer in Raven menu
# Setting type: TimerFormat
# Default value: CurrentDayAndTimeToEnd
# Acceptable values: None, CurrentDay, TimeToEnd, CurrentDayAndTimeToEnd
Raven menu Timer format = CurrentDayAndTimeToEnd

## Show messages "Season is coming" on last day and "Season has come" on first day of season
# Setting type: Boolean
# Default value: true
Show seasonal messages on morning = true

[Season - Control]

## Enables seasonal weathers
# Setting type: Boolean
# Default value: true
Control environments = true

## Enables seasonal random events
# Setting type: Boolean
# Default value: true
Control random events = true

## Enables seasonal lightings change (basically gamma or brightness)
# Setting type: Boolean
# Default value: true
Control lightings = true

## Enables seasonal stats change (status effect)
# Setting type: Boolean
# Default value: true
Control stats = true

## Enables seasonal minimap colors
# Setting type: Boolean
# Default value: true
Control minimap = true

## Enables seasonal coloring of yggdrasil branch in the sky and roots on the ground
# Setting type: Boolean
# Default value: true
Control yggdrasil branch and roots = true

## Enables seasonal changes of trader additional item availability
# Setting type: Boolean
# Default value: true
Control trader seasonal items list = true

## Enables seasonal changes of grass thickness, size and sparseness
# Setting type: Boolean
# Default value: true
Control grass = true

## Enables custom textures
# Setting type: Boolean
# Default value: true
Custom textures = true

[Season - Fade]

## Show black fade loading screen when season is changed.
# Setting type: Boolean
# Default value: true
Show fade effect on season change = true

## Fade duration
# Setting type: Single
# Default value: 0.5
Duration of fade effect = 0.5

[Season - Grass]

## Default size of grass patch (sparseness or how wide a single grass "node" is across the ground)Increase to make grass more sparse and decrease to make grass more tight
# Setting type: Single
# Default value: 10
Default patch size = 10

## Default amount scale (grass density or how many grass patches created around you at once)
# Setting type: Single
# Default value: 1.5
Default amount scale = 1.5

## Grass with set prefabs to be hidden in winter and to change size in other seasons
# Setting type: String
# Default value: instanced_meadows_grass,instanced_forest_groundcover_brown,instanced_forest_groundcover,instanced_swamp_grass,instanced_heathgrass,grasscross_heath_green,instanced_meadows_grass_short,instanced_heathflowers,instanced_mistlands_grass_short
List of grass prefabs to control size = instanced_meadows_grass,instanced_forest_groundcover_brown,instanced_forest_groundcover,instanced_swamp_grass,instanced_heathgrass,grasscross_heath_green,instanced_meadows_grass_short,instanced_heathflowers,instanced_mistlands_grass_short

## Default minimum size of grass will be multiplier by given number
# Setting type: Single
# Default value: 1
Default minimum size multiplier = 1

## Default maximum size of grass will be multiplier by given number
# Setting type: Single
# Default value: 1
Default maximum size multiplier = 1

[Season - Override]

## The season will be overridden by set season.
# Setting type: Boolean
# Default value: false
Override = false

## The season to set.
# Setting type: Season
# Default value: Spring
# Acceptable values: Spring, Summer, Fall, Winter
Season = Spring

## The season day will be overridden by set day.
# Setting type: Boolean
# Default value: false
Day override = false

## The season day to set.
# Setting type: Int32
# Default value: 1
Day = 1

[Season - UI]

## Hover text for bee hive. [Not Synced with Server]
# Setting type: StationHover
# Default value: Vanilla
# Acceptable values: Vanilla, Percentage, MinutesSeconds, Bar
Bee Hive Hover = MinutesSeconds

## Show total needed time/percent for bee hive. [Not Synced with Server]
# Setting type: Boolean
# Default value: true
Bee Hive Show total = true

## Hover text for plants. [Not Synced with Server]
# Setting type: StationHover
# Default value: Vanilla
# Acceptable values: Vanilla, Percentage, MinutesSeconds, Bar
Plants Hover = MinutesSeconds

## Hover text for pickables. [Not Synced with Server]
# Setting type: StationHover
# Default value: Vanilla
# Acceptable values: Vanilla, Percentage, MinutesSeconds, Bar
Pickables Hover = MinutesSeconds

## Change minimap border color according to current season. [Not Synced with Server]
# Setting type: Boolean
# Default value: true
Seasonal colored minimap border = true

[Season - Winter ocean]

## Enable frozen water in winter
# Setting type: Boolean
# Default value: true
Enable frozen water = true

## Water will freeze in the first set day of winter and will be unfrozen after second set day
# Setting type: Vector2
# Default value: {"x":6.0,"y":9.0}
Freeze the water at given days from to = {"x":6.0,"y":9.0}

## Enable ice floes in winter
# Setting type: Boolean
# Default value: true
Enable ice floes in winter = true

## Ice floes will be spawned in the first set day of winter and will be removed after second set day
# Setting type: Vector2
# Default value: {"x":4.0,"y":10.0}
Fill the water with ice floes at given days from to = {"x":4.0,"y":10.0}

## Game will take random value between set numbers and will try to spawn that amount of ice floes in one zone (square 64x64)
# Setting type: Vector2
# Default value: {"x":10.0,"y":20.0}
Amount of ice floes in one zone = {"x":10.0,"y":20.0}

## Size of spawned ice floe random to XYZ axes
# Setting type: Vector2
# Default value: {"x":0.75,"y":2.0}
Scale of ice floes = {"x":0.75,"y":2.0}

## Enables special frozen ocean music
# Setting type: Boolean
# Default value: true
Enable music while travelling frozen ocean at night = true

## Slipperiness factor of the frozen ocean surface
# Setting type: Single
# Default value: 1
Frozen ocean surface slipperiness factor = 1

## Place ship above frozen ocean surface to move them without destroying
# Setting type: Boolean
# Default value: false
Place ship above frozen ocean surface = false

## Place floating containers above frozen ocean surface
# Setting type: Boolean
# Default value: false
Place floating containers above frozen ocean surface = false

[Seasons - Global keys]

## Enables setting seasonal global key
# Setting type: Boolean
# Default value: false
Enable setting seasonal Global Keys = false

## Seasonal global key for autumn. You can set config value like "Season Fall" space separated and it will be treated as key value pair.
# Setting type: String
# Default value: Season_Fall
Fall = Season_Fall

## Seasonal global key for spring. You can set config value like "Season Spring" space separated and it will be treated as key value pair.
# Setting type: String
# Default value: Season_Spring
Spring = Season_Spring

## Seasonal global key for summer. You can set config value like "Season Summer" space separated and it will be treated as key value pair.
# Setting type: String
# Default value: Season_Summer
Summer = Season_Summer

## Seasonal global key for winter. You can set config value like "Season Winter" space separated and it will be treated as key value pair.
# Setting type: String
# Default value: Season_Winter
Winter = Season_Winter

## Seasonal global key for current day number. You can set config value like "SeasonDay {0}" space separated and it will be treated as key value pair.
# Setting type: String
# Default value: SeasonDay_{0}
Day number = SeasonDay_{0}

[Seasons - Localization]

## Season name
# Setting type: String
# Default value: Spring
Season name Spring = Spring

## Season name
# Setting type: String
# Default value: Summer
Season name Summer = Summer

## Season name
# Setting type: String
# Default value: Fall
Season name Fall = Fall

## Season name
# Setting type: String
# Default value: Winter
Season name Winter = Winter

## Message to be shown on the last day of the previous season.
# Setting type: String
# Default value: Spring is coming
Status tooltip - Spring is coming = Spring is coming

## Message to be shown on the last day of the previous season.
# Setting type: String
# Default value: Summer is coming
Status tooltip - Summer is coming = Summer is coming

## Message to be shown on the last day of the previous season.
# Setting type: String
# Default value: Fall is coming
Status tooltip - Fall is coming = Fall is coming

## Message to be shown on the last day of the previous season.
# Setting type: String
# Default value: Winter is coming
Status tooltip - Winter is coming = Winter is coming

## Message to be shown on the buff tooltip and Raven menu.
# Setting type: String
# Default value: Spring has come
Season status effect tooltip - Spring has come = Spring has come

## Message to be shown on the buff tooltip and Raven menu.
# Setting type: String
# Default value: Summer has come
Season status effect tooltip - Summer has come = Summer has come

## Message to be shown on the buff tooltip and Raven menu.
# Setting type: String
# Default value: Fall has come
Season status effect tooltip - Fall has come = Fall has come

## Message to be shown on the buff tooltip and Raven menu.
# Setting type: String
# Default value: Winter has come
Season status effect tooltip - Winter has come = Winter has come

[Test]

## Cache files format. Binary for fast loading single non humanreadable file. JSON for humanreadable cache.json + textures subdirectory.
# Setting type: CacheFormat
# Default value: Binary
# Acceptable values: Binary, Json, SaveBothLoadBinary
Cache format = Binary

## Log time info on state update
# Setting type: Boolean
# Default value: false
Log time = false

## Log ice floes spawning/destroying
# Setting type: Boolean
# Default value: false
Log ice floes = true

## Fix clipping into ground on Plains - Swamp border
# Setting type: Boolean
# Default value: true
Plains Swamp border fix = true

## Make Karve storage always available if frozen. If Karve is below certain level it will be pushed to the surface.
# Setting type: Boolean
# Default value: false
Fix position for frozen Karve = false

## Last day
# Setting type: Single
# Default value: 0
Last day terrain factor = 0

## First day
# Setting type: Single
# Default value: 0
First day terrain factor = 0

